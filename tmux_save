#!/bin/sh
# TMUX SAVE - Save running tmux sessions; https://github.com/c0rner/scripts
# 
# pane_active               1 if active pane
# pane_dead                 1 if pane is dead
# pane_height               Height of pane
# pane_id                   Unique pane id
# pane_pid                  PID of first process in pane
# pane_start_command        Command pane started with
# pane_start_path           Path pane started with
# pane_title                Title of pane
# pane_tty                  Pseudo terminal of pane
# pane_width                Width of pane
# session_attached          1 if session attached
# session_created           Integer time session created
# session_created_string    String time session created
# session_group             Number of session group
# session_grouped           1 if session in a group
# session_height            Height of session
# session_name              Name of session
# session_width             Width of session
# session_windows           Number of windows in session
# window_active             1 if window active
# window_flags              Window flags
# window_height             Height of window
# window_index              Index of window
# window_layout             Window layout description
# window_name               Name of window
# window_width              Width of window
#H                Hostname of local host
#h                Hostname of local host without the domain name
#F                Current window flag
#I                Current window index
#P                Current pane index
#S                Session name
#T                Current pane title
#W                Current window name
##                A literal ‘#’

getOptions() {
   tmux show-options -g -t $1
}

getWindowOptions() {
   tmux show-window-options -g -t $1
}

getPanes() {
   local target=$1

   [ -z $1 ] && return
   tmux list-panes -t "$1" -F "#P${FS}#T${FS}#{pane_pid}${FS}#{pane_start_path}${FS}#{pane_start_command}"
}

getWindows() {
   [ -z $1 ] && return
   tmux list-windows -t "$1" -F "#I${FS}#W${FS}#F${FS}#{window_layout}"
}

getSessions() {
   tmux list-sessions -F "#S"
}

savePane() {
   local target=$1
   local -i window=$2
   local -i baseid=$3
   IFS=${FS}; set $4; IFS=${Newifs}

   if [ "${CurrentPath}" != "$4" ]; then
      CurrentPath="$4"
      echo "# New working directory"
      echo "cd \"${CurrentPath}\""
   fi

   if [ ${WindowIndex} -eq 0 -a ${PaneIndex} -eq 0 ]; then
      local -i winbase=$(getOptions "${target}" | awk '/base-index/{print $2}')
      echo "# [${target}:${window}.${baseid}] - New session"
      echo "tmux new-session -d -s \"${target}\" -n \"$2\""
      [ ${window} -ne ${winbase} ] && echo "tmux move-window -d -s \"${target}:${winbase}\" -t \"${target}:${window}\""
   elif [ ${PaneIndex} -eq 0 ]; then
      echo "# [${target}:${window}.$1] - New window"
      echo "tmux new-window -d -t \"${target}:${window}\" -n \"$2\""
   else
      echo "# [${target}.$(( PaneIndex + ${baseid} ))] - New pane"
      echo "tmux split-window -t \"${target}:${window}.$(( PaneIndex + baseid - 1 ))\""
   fi

   # Prepare command string
   local command="$5"
   if [ -z "${command}" ]; then
      # FIXME: This will only get first pid from the list
      local -i pid=$(ps ao "ppid,pid" | awk "/^ ?$3/{ print \$2; exit }")
      if [ "${pid}" -gt 1 ]; then
         echo "# Command extracted from /proc/${pid}/cmdline"
         command=$(cat /proc/${pid}/cmdline | awk '{gsub(/\0/, " "); print}')
      fi
   fi

   # Inject command if we discovered something running
   [ -n "${command}" ] && echo "tmux send-keys -t \"${target}:${window}.$(( PaneIndex + baseid ))\" \"${command}\" C-m"
}

saveWindow() {
   local target=$1
   local -i panebase=$(getWindowOptions "${target}" | awk '/pane-base-index/{print $2}')
   local pane
   IFS=${FS}; set $2; IFS=${Newifs}

   PaneIndex=0
   for pane in $(getPanes "${target}:$1"); do
      savePane "${target}" "$1" "${panebase}" "${pane}"
      PaneIndex=$(( PaneIndex + 1 ))
   done

   echo "tmux select-layout -t \"${target}:$1\" \"$4\""
}

saveSession() {
   local target="$1"
   local -i widx=0
   local window

   WindowIndex=0
   for window in $(getWindows "${target}"); do
      saveWindow "${target}" "${window}"
      WindowIndex=$(( WindowIndex + 1 ))
   done
   echo ""
}

Newifs="
"
IFS="${Newifs}"
FS=$(echo -ne "\05")

# Disable pathname expansion
set -f

declare -a Sessions=$(getSessions)
for session in ${Sessions}; do
   saveSession ${session}
done
